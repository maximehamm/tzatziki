<!--
  ~ CUCUMBER +
  ~ Copyright (C) 2023  Maxime HAMM - NIMBLY CONSULTING - maxime.hamm.pro@gmail.com
  ~
  ~ This document is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This work is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  -->

<idea-plugin>
    <id>io.nimbly.tzatziki</id>
    <name>Cucumber +</name>
    <vendor email="maxime.hamm@gmail.com"
            url="https://www.linkedin.com/in/maxime-hamm/">Maxime HAMM</vendor>
    <description><![CDATA[

       <b>A better user expérience to run, edit, and print Cucumber features</b><br/>
       <br/>

       <b><u>NEW!</u></b><br/>
         ✓ <b>11.0</b> - Select Gherkin tags to filter for tests execution / for feature exportation to PDF (use new Cucumber+ tool view !)<br/>
         ✓ <b>10.0</b> - Gherkin @Tag completion (put cursor after the @).<br/>
         ✓ <b>&nbsp;9.0</b> - Line markers indicating the number of uses of step implementations (Java, Kotlin). Details bellow.<br/>
         ✓ <b>&nbsp;8.0</b> - Step completion suggests all steps already used in current module, not only steps having an implementation. Details bellow.<br/>
       <br/>
       <br/>

       <b>Tests inspection and runner</b><br/>
       <ul>
          <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_b1cc840f-57a1-4119-8473-4e715f1c9a9f"
                 alt="Cucumber+" width="419" height="233"></p>
          <li>Easily locate failed steps</li>
          <li>Run a single line of a Scenario outline (Java, Kotlin)</li>
          <li>Print related Stacktrace using quickifix</li>
          <li>Customize colors and font style from Settings > Color Scheme > Cucumber+</li>
       </ul>

       <br/>
       <b>Print features to PDF</></b><br/>
       <ul>
          <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_3f9818c3-f3a5-4d48-ba43-f61262ac6704"
                 alt="Cucumber+" width="419" height="233"></p>
          <li>Right click a file and select "<u>Export feature to PDF</u>"</li>
          <li>Select mutiple files to print also a <u>summary</u> and a <u>front page</u></li>
          <li>Customize <u>front page content, footer, header, fonts, colors, etc.</u></li>
          Read more at "cucumber+.default.properties" (generated at first print)</li>
       </ul>

       <br/>
       <b>Easy handling of Cucumber tables</></b><br/>
       <ul>
          <li>Cucumber table <u>formatting as you go</u> :
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_56576887-38ae-4f53-8ac7-4baf79153863"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li>Add <u>new row</u> by pressing 'Enter' from last row or from end of row.<br/></li>
          <li>Add a <u>new column</u> by pressing 'Pipe' from anywere
              <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_14a9e777-c607-4e0a-bb80-f12e0d8db029"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li>Smart copy or cut table cells and <u>paste to Excel</u> :<br/>
              - Swith automatically to column mode when focusing a Cucumber table.<br/>
              - Triple-click a header cell to select an entire he entire column, <br/>or anywhere else for a row.<br/>
              - Copy to clipboard to transfert to Excel for example !
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_98501815-1487-4047-82cb-11dc751b503e"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li>Smart <u>copy from Excel</u> or anywhere and paste to table :<br/>
              - Copy from Excel<br/>
              - Or from any source capable to copy to text separated by tabs and carriage returns<br>
              - Paste clipboard to add or replace to Cucumber table content !
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_6f6705b8-9b2a-4a18-a686-8310645370ee"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li><u>Moving rows and colums</u> up/down and left/right :<br/>
              - Move caret to a table cell<br/>
              - Press Shift+Ctrl and ▼▲ to move row up or down (or Shift+⌘ on MacOs)<br>
              - Press Shift+Ctrl and ◀︎▶ to move column left or right (or Shift+⌘ on MacOs)<br>
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_e5736c06-6104-47b7-944e-7e999a4a4dd9"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li><u>Quick selection</u> of rows and colums,<br/>
              <u>Blanking cells</u> facilities :<br/>
              - Double click header cell to select a column<br/>
              - Double click non-header cell to select a row<br/>
              - Press 'Del' to clear cells content<br/>
              - Press 'Del' again to delete the row or column<br/>
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_7a36072e-0286-4075-9b40-189ab0615d70"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li>Navigate <u>from cell to cell</u> by pressing 'Tab', 'Shift tab' or 'Enter'
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_9ceaf385-b474-453e-81fa-e2b4ec58cac7"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li><u>Completion</u> to easily fill in tables and more:<br/>
              - Table header cells<br/>
              - Table cells<br/>
              - Markdown images references<br/>
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_8d6a3fea-eb62-45f8-a496-4d5c62cd843b"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li><u>Step completion suggests all steps already used in current module</u>, not only steps having an implementation :<br/>
              - The icon tells you if the completion comes from a feature implementation or a feature gherkin file.<br/>
              - The right side gives you the name of the file where the proposal step comes from (i.e a Java class, Ruby, Kotlin, etc) or a feature file name.<br/>
              - You will also know in how many files the step is used, for exemple : toto.feature (+2)<br/>
              - Tags related to step's scenario or step's feature are displayed (gray)<br/>
              - Steps related to a deprecated implementation are striked out (Java/Kotlin/Javascript)<br/>
              - Press <u>ALT-Space</u> to display a preview of other scenario holding the step :
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_d5d33b42-4510-4e4a-b756-db25c50239e6"
                  alt="Cucumber+" width="777" height="233"></p>
          </li>

          <br/>
          <li><u>Export markdown to PDF</u> :
               - Markdown supports into feature header, including pictures references and urls<br/>
               - Export to a nice PDF !<br/>
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_bd53be55-c27c-4302-8e21-bc7e69bb3735"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>

          <br/>
          <li><u>Line markers indicating the number of uses of step implementations</u> (Java, Kotlin) :<br/>
              - The icon indicates the number of scenarios that use this step<br/>
              - Click to choose a scenario and navigate to it<br/>
               <p><img src="https://plugins.jetbrains.com/files/16289/screenshot_c680baaf-76ad-49b1-ba03-8a15cd4a7dda"
                  alt="Cucumber+" width="419" height="233"></p>
          </li>
       </ul>

       <br/>
       <b>Other features :</></b><br/>
       <ul>
          <li><u>Select Gherkin tags to filter for tests execution / for feature exportation to PDF (use Cucumber+ tool view)</u></li>
          <li><u>Tag completion (cursor location after @)</li>
          <li><u>Toggle Cucumber</u> table smart editing (from Edit menu)</li>
          <li><u>Deprecated steps striked out</u> inspection (Java, Kotlin, Javascript)</li>
          <li><u>Navigate from Gerkin step</u> definition to its implementation even after modifing the step text</li>
       </ul>

       <br/>

       Any suggestion ? Let me know !<br/>
       <br/>

       <i>@author Maxime HAMM</i><br/>
       <a href="https://github.com/maximehamm/tzatziki">https://github.com/maximehamm/tzatziki</a><br/>

       <br/>
        Many thanks to Pierre-Michel BRET for his contribution, the great PDF generator, allowing to realize a complete layout with page numbers, summary, paragraphs management, etc.<br/>
    ]]></description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->

    <extensions defaultExtensionNs="com.intellij">

        <notificationGroup id="io.nimbly.notification.group" displayType="BALLOON"/>

        <typedHandler implementation="io.nimbly.tzatziki.TzTypedHandler"/>

        <actionPromoter implementation="io.nimbly.tzatziki.actions.TzActionPromoter"/>

        // Tests and colors
        <testStatusListener implementation="io.nimbly.tzatziki.testdiscovery.TzTestStatusListener"/>
        <annotator language="Gherkin" implementationClass="io.nimbly.tzatziki.testdiscovery.TzTestsResultsAnnotator" order="LAST"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/CCPDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/CCPDarcula.xml"/>
        <colorSettingsPage implementation="io.nimbly.tzatziki.editor.TzColorSettingsPage"/>

        // Markdown and pictures
        <annotator language="Gherkin" implementationClass="io.nimbly.tzatziki.markdown.TzMarkdownAnnotator" order="LAST"/>
        <annotator language="Gherkin" implementationClass="io.nimbly.tzatziki.markdown.TzUrlAnnotator" order="LAST"/>
        <completion.contributor language="Gherkin" implementationClass="io.nimbly.tzatziki.markdown.TzPictureCompletion"/>
        <!--  <psi.referenceContributor language="Gherkin" implementation="io.nimbly.tzatziki.markdown.TzUrlContributor"/> -->

        // Deprecated method or class
        <localInspection language="Gherkin" implementationClass="io.nimbly.tzatziki.inspections.TzDeprecatedStepInspection"
                         shortName="CucumberPlusDeprecatedStep" displayName="Strike out deprecated steps"
                         groupName="Cucumber+" hasStaticDescription="true" enabledByDefault="true" level="INFO"/>

        // Cell completion
        <completion.contributor language="Gherkin" implementationClass="io.nimbly.tzatziki.editor.TzCellCompletion"/>

        // Step completion
        <completion.contributor language="Gherkin" implementationClass="io.nimbly.tzatziki.editor.TzScenarioCompletion" order="first"/>

        // Tag completion
        <completion.contributor language="Gherkin" implementationClass="io.nimbly.tzatziki.editor.TzTagCompletion" order="first"/>

        // Step references
        <psi.referenceContributor language="Gherkin" implementation="io.nimbly.tzatziki.references.TzCucumberReferenceContributor"/>

        //TODO Remove after Gherkin plugin will fix issue IDEA-269898
        <annotator language="Gherkin"
                   implementationClass="io.nimbly.tzatziki.annotators.TzGherkinAnnotator"/>
        //TODO Remove after Gherkin plugin will fix issue IDEA-269898
        <localInspection language="Gherkin"
                         implementationClass="io.nimbly.tzatziki.inspections.TzCucumberStepInspection"
                         shortName="CucumberPlusUndefinedStep" bundle="messages.CucumberBundle"
                         key="cucumber.inspection.undefined.step.name" groupKey="cucumber.inspection.group.name" enabledByDefault="true" level="WARNING"/>

        // Run line markers
        <runLineMarkerContributor id="cucumberPlusLineMarkerContributor" language="Gherkin"
                                  implementationClass="io.nimbly.tzatziki.run.TzSingleLineRunLineMarkerContributor"/>

        // Breakpoints
        <codeInsight.lineMarkerProvider language="Gherkin" implementationClass="io.nimbly.tzatziki.breakpoints.TzBreakpointMakerProvider"/>

        // Cucumber tool window
        <toolWindow factoryClass="io.nimbly.tzatziki.view.CucumberPlusFactory"  id="Cucumber+" anchor="right" icon="ActionIcons.CUCUMBER_PLUS_16"/>

        // Project settings
        <projectService serviceImplementation="io.nimbly.tzatziki.settings.CucumberPersistenceState"/>

    </extensions>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.xml</depends>
    <depends>org.intellij.intelliLang</depends>
    <depends>com.intellij.properties</depends>
    <depends>gherkin</depends>

    <!-- Optional dependencies
    https://jetbrains.org/intellij/sdk/docs/basics/plugin_structure/plugin_dependencies.html#optional-plugin-dependencies -->
    <depends optional="true" config-file="plugin-withJava.xml">com.intellij.java</depends>
    <depends optional="true" config-file="plugin-withJavaCucumber.xml">cucumber-java</depends>
    <depends optional="true" config-file="plugin-withKotlin.xml">org.jetbrains.kotlin</depends>
<!--    <depends optional="true" config-file="plugin-withJavascript.xml">JavaScript</depends>-->
<!--    <depends optional="true" config-file="plugin-withJavascriptCucumber.xml">cucumber-javascript</depends>-->
    <!--suppress PluginXmlValidity -->
    <depends optional="true" config-file="plugin-withScala.xml">org.intellij.scala</depends>

    <!-- Extension point
        https://developerlife.com/2020/11/21/idea-plugin-example-intro/#extensions-and-extension-points -->
    <extensionPoints>
        <extensionPoint name="io.nimbly.tzatziki.main" interface="io.nimbly.tzatziki.TzatzikiExtensionPoint"/>
    </extensionPoints>

    <applicationListeners>
        <listener class="io.nimbly.tzatziki.TzTModuleListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>

    <actions>

        <group id="io.nimbly.tzatziki.group">

            <separator/>

            <action class="io.nimbly.tzatziki.actions.TzToggleTzatzikiAction"
                    id="io.nimbly.tzatziki.ToggleTzatziki"
                    text="Toggle Cucumber+">
            </action>

            <action class="io.nimbly.tzatziki.actions.TableShiftUpAction"
                    id="io.nimbly.tzatziki.ShiftUp"
                    text="Shift up" description="Shift up line" icon="ActionIcons.SHIFT_UP">
                <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl UP"/>
            </action>
            <action class="io.nimbly.tzatziki.actions.TableShiftDownAction"
                    id="io.nimbly.tzatziki.ShiftDown"
                    text="Shift down" description="Shift down line" icon="ActionIcons.SHIFT_DOWN"   >
                <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl DOWN"/>
            </action>

            <action class="io.nimbly.tzatziki.actions.TableShiftLeftAction"
                    id="io.nimbly.tzatziki.ShiftLeft"
                    text="Shift left" description="Shift column to the left" icon="ActionIcons.SHIFT_LEFT">
                <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl LEFT"/>
            </action>
            <action class="io.nimbly.tzatziki.actions.TableShiftRightAction"
                    id="io.nimbly.tzatziki.ShiftRight"
                    text="Shift right" description="Shift column to the right" icon="ActionIcons.SHIFT_RIGHT">
                <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl RIGHT"/>
            </action>

            <add-to-group group-id="CutCopyPasteGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="EditorToggleColumnMode"/>

        </group>

        <group id="io.nimbly.tzatziki.export.group">

            <action class="io.nimbly.tzatziki.actions.TzExportAction"
                    id="io.nimbly.tzatziki.ExportToPdf"
                    text="Export feature to PDF" icon="ActionIcons.EXPORT">
            </action>

            <add-to-group group-id="FileMenu" anchor="after" relative-to-action="PrintExportGroup"/>
            <add-to-group group-id="io.nimbly.tzatziki.group" anchor="after" relative-to-action="io.nimbly.tzatziki.ShiftRight"/>

        </group>
    </actions>


</idea-plugin>
